@model SunLine.Community.Web.ViewModels.Account.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="row">
    <div class="col-sm-6 col-sm-offset-3">
        <div class="panel panel-default panel-center">
            <div class="panel-heading">
                <h3 class="panel-title">@ViewBag.Title</h3> <div class="panel-options">
                </div>
            </div>

            <div class="panel-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", @role = "form", @id = "registerform" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Languages, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.Language, new SelectList(Model.Languages, "Code", "Name"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Language, string.Empty, new { @class = "validate-has-error" })
                        </div>
                    </div>
                    <div class="form-group-separator"></div>
                    
                    <div class="form-group">
                        @Html.Label("Are you human?", new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            <div class="g-recaptcha" data-sitekey="@Model.RecaptchaPublicKey"></div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="submit" class="btn btn-info" value="Register" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@section Head
{
    <script src='https://www.google.com/recaptcha/api.js'></script>
}
