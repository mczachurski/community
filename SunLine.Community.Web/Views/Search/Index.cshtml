@using SunLine.Community.Resources.Titles
@model SunLine.Community.Web.ViewModels.Search.SearchViewModel

@{
    ViewBag.Title = "Search results";
    ViewBag.ShowCompose = false;
}

<section class="search-env panel-center">

    <form method="get" action="@Url.Action("Index", "Search")" enctype="application/x-www-form-urlencoded">
        <input type="text" class="form-control input-lg" placeholder="Search..." name="s" value="@Model.Query">
        <button type="submit" class="btn-unstyled"> <i class="linecons-search"></i> </button>
    </form>

	<div> 
		<ul class="nav nav-tabs"> 
			<li class="active"> 
				<a href="#users" data-toggle="tab">
					<span class="visible-xs"><i class="fa-user"></i></span> 
					<span class="hidden-xs">Users <span class="badge badge-info">@Model.AmountOfUsers</span></span> 
				</a> 
			</li> 
			<li> 
				<a href="#minds" data-toggle="tab"> 
					<span class="visible-xs"><i class="fa-envelope"></i></span> 
					<span class="hidden-xs">Minds <span class="badge badge-warning">@Model.AmountOfMessages</span></span> 
				</a> 
			</li> 
		</ul> 
		<div class="tab-content tab-search-content"> 
			<div class="tab-pane active" id="users"> 
				@Html.Partial("_UserListPartial", Model.Users)
			</div> 
			<div class="tab-pane" id="minds"> 
				@Html.Partial("_UserMessagesPartial", Model.TimelineViewModel)
			</div> 
		</div> 
	</div>

</section>

@section Modals {
    @Html.Partial("_UserMessageModalsPartial")
	@Html.Partial("_UserMessageGalleryPartial")
}

@section Scripts {
    @Scripts.Render("~/bundles/usermessage")
    @Scripts.Render("~/bundles/userconnection")

    <script type="text/javascript">

        var userMessage = new SunLine.Community.UserMessage();
        userMessage.Init({
            TransmitUrl: '@Url.Action("Transmit", "Messages")',
            FavouriteUrl: '@Url.Action("Favourite", "Messages")',
            FavouriteCommentUrl: '@Url.Action("FavouriteComment", "Messages")',
            ToggleConnectionUrl: '@Url.Action("ToggleConnection", "Users")',
            PopoverUrl: '@Url.Action("Popover", "Users")',
            BubbleUrl: '@Url.Action("Bubble", "Messages")',
            DeleteMessageUrl: '@Url.Action("Delete", "Messages")',
            ErrorWhileSendingTransmitMessage: '@SpeechesMessage.ErrorWhileSendingTransmit',
            MessageWasRemovedMessage: '@SpeechesMessage.MessageWasRemoved',
            ErrorWhileDeletingMessage: '@SpeechesMessage.ErrorWhileDeletingMessage',
            ErrorWhileBubblingMessage: '@SpeechesMessage.ErrorWhileBubbling',
            ErrorWhileFavouriteMessage: '@SpeechesMessage.ErrorWhileFavourite',
            ErrorWhileFavouriteCommentMessage: '@SpeechesMessage.ErrorWhileFavouriteComment',
            ErrorWhileAddingCommentMessage: '@SpeechesMessage.ErrorWhileAddingComment',
            ErrorWhileAddingMindMessage: '@SpeechesMessage.ErrorWhileAddingMind',
            ErrorWhileChangingConnectionMessage: '@UsersMessage.ErrorWhileChangingConnection',
            ConnectionWasCreatedMessage: '@UsersMessage.ConnectionWasCreated',
            ConnectionWasRemovedMessage: '@UsersMessage.ConnectionWasRemoved',
            ErrorWhilePublishSpeechMessage: '@SpeechesMessage.ErrorWhilePublishSpeech',
            SpeechWasPublishedMessage: '@SpeechesMessage.SpeechWasPublished'
        });

        var userConnection = new SunLine.Community.UserConnection();
        userConnection.Init({
            ToggleConnectionUrl: '@Url.Action("ToggleConnection", "Users")',
            ConnectionWasCreatedMessage: '@UsersMessage.ConnectionWasCreated',
            ConnectionWasRemovedMessage: '@UsersMessage.ConnectionWasRemoved',
            ErrorWhileChangingConnectionMessage: '@UsersMessage.ErrorWhileChangingConnection'
        });

    </script>
}