@model SunLine.Community.Web.ViewModels.Users.EditProfileViewModel


<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Edit profile</h3>
    </div>

    <div class="panel-body">
        @using(Ajax.BeginForm("SaveProfileAjax", new { Controller = "Users" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "editProfile.OnSuccessSaveProfile", 
        	OnFailure = "editProfile.OnFailureSaveProfile", OnBegin = "editProfile.OnBeginSaveProfile", OnComplete = "editProfile.OnCompleteSaveProfile" }, 
        	new { @role = "form", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName, string.Empty, new { @class = "validate-has-error" })
                </div>
            </div>
            <div class="form-group-separator"></div>

            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName, string.Empty, new { @class = "validate-has-error" })
                </div>
            </div>
            <div class="form-group-separator"></div>

            <div class="form-group">
                @Html.LabelFor(m => m.Motto, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextAreaFor(x => x.Motto, 2, 5, new { @class= "form-control", @placeholder = "A few words about you." })
                    @Html.ValidationMessageFor(m => m.Motto, string.Empty, new { @class = "validate-has-error" })
                </div>
            </div>
			<div class="form-group-separator"></div>

            <div class="form-group">
                @Html.LabelFor(m => m.Location, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Location, string.Empty, new { @class = "validate-has-error" })
                </div>
            </div>
			<div class="form-group-separator"></div>

            <div class="form-group">
                @Html.LabelFor(m => m.WebAddress, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.WebAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.WebAddress, string.Empty, new { @class = "validate-has-error" })
                </div>
            </div>
            <div class="form-group-separator"></div>

            <div class="form-group">
                @Html.LabelFor(m => m.Language, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Language, new SelectList(Model.Languages, "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Language, string.Empty, new { @class = "validate-has-error" })
                </div>
            </div>
                
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" class="btn btn-info" id="save-profile" value="Save profile" />
                </div>
            </div>
        }
    </div>
</div>
